name: Lint and test

on:
  workflow_dispatch:
  push:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ⬇️
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup python 🐍
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install dependencies ☕️
        run: |
          pip install -U pip
          pip install -r requirements_test.txt

      - name: Lint 🔍
        run: flake8 order tests setup.py

  pypi:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ⬇️
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup python 🐍
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install dependencies ☕️
        run: |
          pip install -U pip
          pip install twine

      - name: Check bundling 📦
        run: python setup.py sdist

      - name: Check setup 🚦
        run: twine check "dist/$( python setup.py --fullname ).tar.gz"

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
    name: test (python ${{ matrix.python-version }})
    steps:
      - name: Checkout ⬇️
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Python ${{ matrix.python-version }} 🐍
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies ☕️
        run: |
          pip install -U pip
          pip install -r requirements_test.txt

      - name: Test 🎢
        run: python -m unittest tests

  test_legacy_py36:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version:
          - "3.6"
    name: test (python ${{ matrix.python-version }})
    steps:
      - name: Checkout ⬇️
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Python ${{ matrix.python-version }} 🐍
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies ☕️
        run: |
          pip install -U pip
          pip install -r requirements_test.txt

      - name: Test 🎢
        run: python -m unittest tests

  test_legacy_py27:
    runs-on: ubuntu-20.04
    container:
      image: python:2.7.18-buster
    strategy:
      matrix:
        python-version:
          - "2.7"
    name: test (python ${{ matrix.python-version }})
    steps:
      - name: Checkout ⬇️
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install dependencies ☕️
        run: |
          pip install -U pip
          pip install -r requirements_test.txt

      - name: Test 🎢
        run: python -m unittest tests

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ⬇️
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          submodules: recursive

      - name: Install dependencies ☕️
        run: |
          pip install -U pip
          pip install -r requirements_test.txt

      - name: Run coverage test 🎢
        run: |
          pytest --cov=order --cov-report xml:coverage.xml tests

      - name: Upload report 🔝
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
